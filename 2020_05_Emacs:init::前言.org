#+title: Emacs配置：前言
#+startup: content
#+author: Gaeric
#+HTML_HEAD: <link href="./worg.css" rel="stylesheet" type="text/css">
#+HTML_HEAD: <link href="/static/css/worg.css" rel="stylesheet" type="text/css">
#+OPTIONS: ^:{}
* 简介
  我是在大学时接触Emacs的，那个时候教我们C语言的老师鼓励我们使用Linux，于是我踏入了Linux的领域之中；

  之后在解决一些简单的使用问题时，发现了Emacs这个软件，从此开始了Emacs的使用历程；

  我在学习之初即读过了陈斌写的[[https://github.com/redguardtoo/mastering-emacs-in-one-year-guide][一年成为Emacs高手]]，到现在为止，我依然非常认同他的观点；

  但是，在实践使用过程中，我遇到了一个问题：一个人的配置，都与它自己建立的工作流相关；对于我这种入门时，连工作流应当是什么样子都不了解的人，往往无法有效的借鉴高手的成果，甚至有的时候，根本就不知道应该怎么高效的完成工作。

  于是我决定换一种方式去使用高手的成果：我依然会去抄高手的配置文件，但是我不会使用~git clone~的方式直接使用他的配置；而是将他的配置文件抄一遍，去看看高手们是如何去解决问题的；

  抄写完成后，我会对每一个~init-xxx.el~，用一篇博客来解析这个配置文件中有什么内容，以及我眼中这个内容背后的逻辑；

  尽管代码提倡自我注释，但是我认为配置文件和代码本身不一样；代码本身是在提供解决某个现实问题的工具，但是配置文件更像是在使用某个工具，对工具的使用方法，应当有详尽的说明。

  这么做的目的主要有两个：第一，记录这个配置文件使用工具的逻辑和方法，帮助自己在需要时能及时回顾；第二，希望它能为后来者提供些许帮助。
* Emacs配置组织方法
  我使用半手动的包管理方式，Emacs配置组织如下：
  site-lisp: 放置所有的package文件
  config: 放置对各个组件的详细配置信息
  init.el
* 写作原则
  将自己知道的内容解释清楚，对自己未知的领域保持沉默；

  工具和配置都会随着时间的推移而更新，那么这一系列文章也要与时俱进。
