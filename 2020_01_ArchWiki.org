#+title:Arch拾遗
#+author: Gaeric
* 简介
  目前我的主力系统是archlinux，本文记录在Arch安装和使用过程中的笔记，本文的主要目的是让自己能够在再次面对这些问题时回忆起关键信息，技术解释的不够全面和详细，请参考archwiki，随时更新
* Note
** For Installation
   今天在新的机器上重新安装了archlinux，本次安装完全遵循https://wiki.archlinux.org/title/Installation_guide， 但是安装过程中对Boot区域的划分有些迷糊，安装完成后网络连接也出现了问题，本处记录这两个问题
   1. Boot相关磁盘划分以及分区
      本次安装前将BIOS由Legacy模式切换至UEFI模式，UEFI要求磁盘为GPT格式，于是我依据wiki的说明划分了512M的空间，预留为~EFI FileSystem~，为~sda1~；

      这里需要记录的是，在使用~fdisk~指定sda1为efi分区时，可以在划分分区时使用t命令字指定该分区的类型，1为~EFI FileSystem~

      其它空间格式化为ext4，预留给操作系统，为~sda2~

      查看wiki说明，在磁盘建立一个/mnt/boot目录，以便于后续将~sda1~区域挂载至此，作为引导分区，这里将来会存放grub.efi文件以及其配置内容；

      给操作系统的空间sda2挂载至/mnt，然后再将sda1挂载到/mnt/boot/，然后生成fstab信息；

      其操作如下：
      #+begin_src shell
        mount /dev/sda2 /mnt
        mount --mkdir /dev/sda1 /mnt/boot
        genfstab -U /mnt >> /mnt/etc/fstab
      #+end_src

      然后在建立grub启动项时，又要将sda1挂载至~/efi~或 ~/boot/efi~ （注意与前面生成fstab时并不是在同一个根目录下）；

      注意，建立grub配置信息时，此处挂载的/mnt/boot即是esp节定，在arch-chroot后，节点为/boot；

   2. 系统软件包安装时，安装如下package group：
      #+begin_src shell
        pacstrap /mnt base base-devel linux linux-firmware
      #+end_src
      其中base-devel为一些基础的开发软件包，包括~sudo, gcc, split~等，如果要从AUR安装软件，要记得安装这个~package group~

   3. 安装完成后为新系统配置网络
** System
*** 如何设置dhcp
    首先要安装dhcpcd软件，然后如下操作

    1. ip link : 查看网卡名称，如enp4s0或eth0
    2. ip link set enp4s0 up : 启动网卡
    3. dhcpcd enp4s0 : 自动配置有线网络
    4. systemctl enable dhcpcd@enp4s0.service : 配置开机启动有线网络
    5. 完成！以后系统开机自动联网！
*** 安装loader
    #+BEGIN_EXAMPLE
    # grub-install --target=i386-pc /dev/sdX
    #+END_EXAMPLE
    where /dev/sdX is the disk where grub is to be installed (for example, disk /dev/sda and not partition /dev/sda1). 
**** 安装Grub引导报错
     grub-install --target=x86_64-efi --efi-directory=esp --bootloader-id=GRUB
     #+BEGIN_EXAMPLE
     warn: This GPT partition label has no BIOS Boot Partition; embedding won't be possible!.
           warn: Embedding is not possible.  GRUB can only be installed in this setup by using blocklists.  However, blocklists are UNRELIABLE and their use is discouraged..
           error: will not proceed with blocklists.
     #+END_EXAMPLE
     解决方案：根据字面意思，可以强制写入blocklist；
     grub-install --target=x86_64-efi --efi-directory=esp --bootloader-id=GRUB --force
**** Arch+Win双系统配置Grub引导
     加其它启动项最好的方法是使用os-prober，挂载系统所在的启动分区，然后直接执行 grub-mkconfig 即可
     然后运行如下命令，更新 ~/boot/grub/custom.cfg~
     #+BEGIN_EXAMPLE
     # grub-mkconfig -o /boot/grub/grub.cfg
     #+END_EXAMPLE

     参考ArchWiki: https://wiki.archlinux.org/index.php/GRUB
     本地参考如下
     #+BEGIN_EXAMPLE
     ### BEGIN /etc/grub.d/30_os-prober ###
     menuentry 'Windows 7 (on /dev/sda1)' --class windows --class os $menuentry_id_option 'osprober-chain-78FC9A61FC9A1A08' {
     insmod part_msdos
           insmod ntfs
           set root='hd0,msdos1'
           if [ x$feature_platform_search_hint = xy ]; then
           search --no-floppy --fs-uuid --set=root --hint-ieee1275='ieee1275//disk@0,msdos1' --hint-bios=hd0,msdos1 --hint-efi=hd0,msdos1 --hint-baremetal=ahci0,msdos1  78FC9A61FC9A1A08
           else
           search --no-floppy --fs-uuid --set=root 78FC9A61FC9A1A08
           fi
           parttool ${root} hidden-
           chainloader +1
     }
     ### END /etc/grub.d/30_os-prober ###
     #+END_EXAMPLE
*** 系统时间不正确需要重新配置
    #+BEGIN_EXAMPLE
     # 将系统时间写入BIOS（--systohc)
     hwclock --systohc --localtime
    #+end_EXAMPLE
*** 系统扬声器无输出
    首先尝试使用speaker-test -c 0检查扬声器是否有输出，有声音输出则无须进行下面的设置，进行其它检查即可

    如果没有输出，首先通过aplay -L确认一下所有的音频设备，找到自已期望输出声音的设备类型，如PCH，使用-D参数手动指定为 speaker-test -D default:PCH -c 0

    如果无声音输出，下文方法不适用；如果此时有声音输出，说明是默认声卡配置不正确。

    原因为默认声卡选择错误，将下列内容追加至/etc/asound.conf或~/.asroundrc
    #+BEGIN_EXAMPLE
    defaults.ctl.card 2;
    defaults.pcm.card 2;
    #+end_EXAMPLE

    上例中defaults.ctl.card为固定格式，表明将声音设备的卡及控制都设置为card2，card的编号可以通过aplay -l获取
*** 安装过程中无法连接wifi
    #+BEGIN_SRC shell
      wifi-menu
      dhcpcd
    #+END_SRC
    第一个命令打开menu菜单，连接wifi
    第二个命令进行dhcp，自动获取ip地址
*** 虚机下无法shh到远程服务器
    报错信息为：
    packet_write_wait: Connection to 118.24.23.137 port 22: Broken pipe
   
    根因为：VMware NAT 网络模式导致
   
    解决方法为：手动指定 ssh 参数 -o 'IPQoS=lowdelay throughput'
   
    参考链接：https://lvii.github.io/system/2018-08-31-openssh-7.8p1-broken-pipe-under-vmware-vm-with-nat-port-forward/
*** git下载速度过慢
    使用~proxy~
    #+begin_example
    # 设置代理
    git config --global http.proxy http://127.0.0.1:1080
    # 取消代理
    git config --global unset http.proxy
    #+end_example
*** Chromium设置代理
    chromium可以使用插件设置，我一般使用~switchyomega~，因为它在firefox和chrome上通用

    为chrome/chromium安装switchyomega，首先需要proxy，所以这里记录如何在命令行中为chrome/chromium设置proxy：

    #+BEGIN_SRC shell
      chromium --proxy-server="http://localhost:38885;https://localhost:38885;socks5://localhost:37567"
    #+END_SRC

    注意首先需要关闭chrome或chromium，在未关闭其进程的情况下启动，proxy设置不会生效；猜测是因为在chrome/chromium进程存在时，新启动的只是一个session
*** Bluetooth
    1. 安装bluez和bluez-utils，做为蓝牙协议栈和实用程序组
    2. 启动bluetooth.service
    3. 安装blueberry用于蓝牙管理
    4. 安装pipewire-pulse和helvum，前者提供对蓝牙耳机的支持，helvum是前者的前端界面
*** 临时设置http_proxy和https_proxy
    export http_proxy=http://127.0.0.1:20171  
    export https_proxy=http://127.0.0.1:20171  
** Swaywm
*** sway处理乱码并配置终端模拟器
    此时切到普通用户，直接运行 ~sway~ 应该可以直接启动了
   
    进去之后发现乱码，安装字体解决
    #+BEGIN_EXAMPLE
    # 暂时不考虑中文
    pacman -S noto-fonts adobe-source-code-pro-fonts
    #+END_EXAMPLE
    然后，终端模拟器是必须的，在这里我使用sway默认的~alacritty~，其它可以选择的终端管理器可见于其wiki
    #+BEGIN_EXAMPLE
    pacman -S alacritty
    #+END_EXAMPLE
    *sway现在默认的终端模拟器为alacritty，如果修改为其它的终端模拟器，记得修改config中的$term配置*
*** sway下的dmenu替代工具
    wofi是一个替代rofi的工具，做为应用启动器

    要使wofi生效，需要在sway的配置文件中将应用启动器相关选项设置为：
    #+BEGIN_EXAMPLE
      set $menu wofi --show run | xargs swaymsg exec --
    #+END_EXAMPLE
*** sway双屏配置
    sway默认支持多屏，简单使用无须配置。这里记录的配置原因是，HDMI-A-1(简称A1)在左边，HDMI-A-2(A2)在右边，但是使用鼠标时，鼠标需要从A1的左侧才能滑入A2的右侧，非常反直觉；

    尝试设置了sway的输出设置，可以解决这个问题，记录如下：
    #+begin_example
      output HDMI-A-1 resolution 1920x1080 position 0,0
      output HDMI-A-2 resolution 1920x1080 position 1920,0
    #+end_example
** Fcitx5
*** [2022-02-12 Sat]
    这段时间以来fcitx5都不能正常工作，今天尝试将/env/environment文件中的GTK_IM_MODULE设置删掉了之后，fcitx5反倒能在firefox中正常工作了

    然后实验按照archwiki上的说明，使用了pam_environmen文件设置了环境变量后，fcitx5不能在firefox中使用，这个问题的原因目前不清楚
*** fcitx5开机在sway下自启动
    #+begin_src sh
      exec --no-startup-id fcitx5 -d
    #+end_src
*** 使用声笔飞单
    在archlinux上使用声笔码非常简单，首先安装librime-sbxlm-git这个package（需要archlinuxcn源，如果没有，需要使用aur，或手动安装）

    然后安装arch上已经配置好的rime-sbxlm rime-sbxlm-sbfm这两个package，这两个package提供了必要的文件，安装完成后执行sbxlm-init；

    fcitx5的配置文件放置在~/.local/share/fcitx5/目录下，其下的rime目录存放了rime的文件，修改默认的输入法，并进行deploy即可。
** Package
*** package-list
    1. sway foot wofi waybar ripgrep bat exa fd polkit
    2. thunar gvfs tumbler thunar-volman thunar-archive-plugin thunar-media-tags-plugin ntfs-3g meld gnome-system-monitor xorg-xwayland
    3. zsh lua python3 clash firefox fzf zsh-autosuggestions zsh-syntax-highlighting emacs 
    4. zathura zathura-cb zathura-djvu zathura-pdf-mupdf zathura-ps libreoffice-fresh
    5. ristretto mako linuxqq mpv flamshot ttf-lxgw-wenkai ttf-lxgw-wenkai-mono

    还有部分软件未安装：
    音乐播放器 - mpv
    视频播放器 - mpv
    图片浏览器 - ristretto/imv
    系统监视器 - gnome-system-monitor
    ssh client - electerm
    邮件管理器
    通知系统 - mako
*** 配置polkit
    polkit，简单来说是一个包装了的用户鉴权接口，用于确认用户是否拥有权限执行某个功能；比如挂载磁盘

    因为使用了thunar，图形界面打开其它盘时可能需要鉴权，此时需要先安装一个polkit-agent，我安装了mate-polkit

    这个polkit-agent不会自启动，需要手动调起，将如下指令加到sway的配置文件中，令其自启动即可
    #+begin_example
    exec --no-startup-id /usr/lib/mate-polkit/polkit-mate-authentication-agent-1
    #+end_example
*** ssh使用proxy
    ssh的配置依赖于ncat工具，先安装nmap包
    #+begin_example
      pacman -S nmap
    #+end_example

    ssh配置文件如下：
    #+begin_example
      Host github.com
      HostName github.com
      User git
      Port 22
      ProxyCommand /usr/bin/ncat --proxy 127.0.0.1:7891 --proxy-type socks5 %h %p
    #+end_example
*** Arch安装MySQL数据库
    在 ~Arch/Linux~ 中，安装 ~Mariadb
    #+BEGIN_EXAMPLE
    直接安装相应的软件包
    pacman -S mysql

    然后执行如下命令：
    mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql

    然后先启动 MySQL
    # systemctl start mariadb

    先配置相应的 root 密码
    '/usr/bin/mysqladmin' -u root password 'new-password' 
    '/usr/bin/mysqladmin' -u root -h lantian password 'new-password'  
    Alternatively you can run: '/usr/bin/mysql_secure_installation'

    然后启动 MariaDB，按 wiki 步骤执行即可
    # mysql_secure_installation
    # systemctl restart mariadb

    在Mac或Linux上，需要编辑MySQL的配置文件，把数据库默认的编码全部改为UTF-8。MySQL的配置文件默认存放在/etc/my.cnf或者/etc/mysql/my.cnf：

    [client]
    default-character-set = utf8

    [mysqld]
    default-storage-engine = INNODB
    character-set-server = utf8
    collation-server = utf8_general_ci
    #+END_EXAMPLE
*** pacman跳过校验package的签名
    使用pacamn从镜像源安装sway时，出现了错误

    错误内容如下：
    #+begin_example
      error: swaybg: signature from "Brett Cornwall <brett@i--b.com>" is unknown trust
      :: File /var/cache/pacman/pkg/swaybg-1.1-1-x86_64.pkg.tar.zst is corrupted (invalid or corrupted package (PGP signature)).
      Do you want to delete it? [Y/n] n
      ...
      error: failed to commit transaction (invalid or corrupted package (PGP signature))
    #+end_example

    google错误内容，找到archlinux中的bug反馈： https://bugs.archlinux.org/task/71704#comment201517

    可知这是因为维护人员的个人签名已经过期了，这个包无法安装

    这里我没有多加验证，直接设置pacman的签名校验级别为Never（有安全风险，请慎重，并及时改回），示例如下：

    #+begin_example
      # file: /etc/pacman.conf
      SigLevel    = Never
    #+end_example

    参考内容如下：
    https://wiki.archlinux.org/title/Pacman_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)/Package_signing_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)

    https://man.archlinux.org/man/pacman.conf.5#PACKAGE_AND_DATABASE_SIGNATURE_CHECKING
*** 从AUR安装软件
    示例：~wlroots-git~ 和 ~sway-git~
    首先找到 ~Arch~ 提供的 ~AUR~ 仓库
    分别为：
    https://aur.archlinux.org/sway-git.git
    https://aur.archlinux.org/wlroots-git.git
   
    由于是 ~git~ 仓库，直接使用 ~git~ 下载：
    #+BEGIN_EXAMPLE
    git clone https://aur.archlinux.org/sway-git.git /tmp/sway
    git clone https://aur.archlinux.org/wlroots-git.git /tmp/wlroots
    #+END_EXAMPLE
    然后可以看到相应目录下的 ~PKGBUILD~
    检查依赖并下载，然后安装
   
    直接 ~makepkg -s PKGBUILD~ 
    这一步将会使用 ~pacman~ 自动解决依赖，并且自动编译成相应的软件包
    *注意：需要在普通用户下执行*
   
    然后使用 ~pacman -U PACKAGENAME~ 安装已经编译完成的包
    #+BEGIN_EXAMPLE
    pacman -U wlroots-git.tar.gz
    #+END_EXAMPLE
*** 安装和锁定指定版本的软件
    1. 在确认问题之前，首先应当要掌握如何使用pacman安装指定版本的软件
       参考：https://zhuanlan.zhihu.com/p/260993724

       对于之前没安装过的包，需要手动去Arch Linux Archive找到包的url，执行如下指令安装：
       pacman -U https://archive.archlinux.org/packages/.../packagename.pkg.tar.xz

       对于之前有安装过的package，可以在var/cache/pacman/pkg下找到，执行
       sudo pacman -U /var/cache/pacman/pkg/python-...-x86_64.pkg.tar.zst

       如果这个pkg不想升级，则在/etc/pacman.conf的IgnorePkg中加上刚刚安装的包
*** 使用file指令查看文件类型
    今天使用unzip解压文件时，发现一个zip包无法解压，应该是压缩类型不对；

    如果得知文件的压缩类型？查询发现file指令可以得出其文件类型

    #+begin_src shell
      file demo.zip
    #+end_src
** Tips
*** amdgpu驱动兼容性问题
    在plasma6上，运行bevy时，出现如下报错信息
    #+begin_example
      Selected GPU 0: AMD Radeon RX 6700 XT, type: DiscreteGpu
      wl_drm@17: error 0: wl_drm.create_prime_buffer is not implemented
    #+end_example

    根据google查到的信息，这是因为amdgpu驱动amdvlk使用了wayland协议中的私有的wl_drm内容，而目前wayland协议已经开始转向到使用linux_dmabuff，amdvlk对该协议的支持将在2024.Q4.1发布

    信息来源：
    https://bbs.archlinux.org/viewtopic.php?id=294816 

    https://github.com/GPUOpen-Drivers/pal/issues/96

    进一步检查，发现amd的驱动有三个可以选择的package，而我同时安装了amdvlk和vulkan-randeon，amdgpu在选择驱动时，默认会选择到amdvlk

    尝试卸载amdvlk，发现vulkan-randeon能使得bevy正常工作

    如果后续仍然需要装回amdvlk，需要遵循链接中的设置：https://wiki.archlinux.org/title/AMDGPU
*** kira无法播放声音
    运行foxtrot出现告警，发现是bevy_kira_audio的报错：
    #+begin_example
      WARN bevy_kira_audio::audio_output: Failed to setup audio: DefaultStreamConfigError(DeviceNotAvailable)
    #+end_example

    直接下载bevy_kira_audio，执行example用例，发现同样存在该报错。issue上无法搜索到相关信息，怀疑是底层依赖的问题。

    进一步，下载kira并执行，发现了更详细的报错信息：
    #+begin_example
      ALSA lib pcm_dmix.c:1000:(snd_pcm_dmix_open) unable to open slave
      Error: DefaultStreamConfigError(DeviceNotAvailable)
    #+end_example

    根据alsa的报错，查到archlinux bbs上有提示，需要安装pipewire-alsa
    #+begin_src bash-ts
      pacman -S pipewire-alsa
    #+end_src

    安装完成后上述问题解决
* History
  本栏记录那些已经不再使用的记录，过去验证的经验仅供参考
** yong输入法
   #+BEGIN_SRC shell
     wget http://ys-c.ys168.com/244626543/hVfHkVk4K465F3K6KM6/yong-lin-2.5.0-0.7z;

     7za e <archive name>
   #+END_SRC

   Note: yong正常工作需要GTK2和GTK3，注意C+Space快捷键可能被其它应用程序拦截
*** 安装 yong 输入法出错
    #+BEGIN_EXAMPLE
    Cannot load module /usr/lib/gtk-2.0/2.10.0/immodules/im-yong.so: /usr/lib/gtk-2.0/2.10.0/immodules/im-yong.so: wrong ELF class: ELFCLASS32
    /usr/lib/gtk-2.0/2.10.0/immodules/im-yong.so does not export GTK+ IM module API: /usr/lib/gtk-2.0/2.10.0/immodules/im-yong.so: wrong ELF class: ELFCLASS32
    Cannot load module /usr/lib/gtk-3.0/3.0.0/immodules/im-yong.so: /usr/lib/gtk-3.0/3.0.0/immodules/im-yong.so: wrong ELF class: ELFCLASS32
    /usr/lib/gtk-3.0/3.0.0/immodules/im-yong.so does not export GTK+ IM module API: /usr/lib/gtk-3.0/3.0.0/immodules/im-yong.so: wrong ELF class: ELFCLASS32 
    #+END_EXAMPLE
    由于系统环境为纯64位所致，此错误不影响输入法使用
** 如何安装i3窗口管理器
   #+BEGIN_SRC shell
     # 先要安装相应的xorg程序集，以及相应的xorg-xinit管理器
     pacman -S xorg xorg-xinit
     # 然后安装i3程序包组
     # 为了正常使用，往往需要安装一个虚拟终端
     pacman -S rxvt-unicode
     # 程序组列表：https://www.archlinux.org/groups/
     pacman -S i3
   #+END_SRC
