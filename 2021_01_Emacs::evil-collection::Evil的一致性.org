#+title: Evil的一致性
#+startup: content
#+author: Gaeric
#+HTML_HEAD: <link href="./worg.css" rel="stylesheet" type="text/css">
#+HTML_HEAD: <link href="/static/css/worg.css" rel="stylesheet" type="text/css">
#+OPTIONS: ^:{}
* 简介
  这是一篇反思，侧重于厘清，在引入了evil之后，如何规划evil的快捷键与Emacs原有快捷键之间共存的问题
* 说明
  总而言之，效率并不是我们唯一的追求，一致性带来的确定性同样非常重要
* Note
  首先要回答几个问题：

  1. 为什么一致性和确定性很重要
     如果你按下此键后，不能以直觉的速度反应出Emacs会执行什么样的操作，就会打断自己的心流，转而从繁杂的记忆中搜索，自己对这个按键做下的设定；这意味着更多的记忆，更慢的速度，更多的脑力负担，行云流水般操作带来的快感被中断，带来非常不适的操作体验

  2. 为什么要引入Evil
     引入Evil并不仅仅只是为了提高编辑效率，Emacs的组合键带来的编辑效率并不低下，Evil相对于原生的Emacs快捷键，对我而言最最重要的原因是缓解手指的疲劳，因为原生快捷键按的时间稍久就手指疼；更何况Evil让我在编辑时更加舒适，而且它给我带来了更高的容错率

  我许久之前就知道了evil模式的快捷键映射Package：~evil-collection~，但是我一直没有尝试；因为我认为，当你不知道自己应该按下什么键来触发操作时，你不应该使用快捷键；但是在之后的操作中，我发现了自己的一个毛病：高速操作时我会无意识的按下kj用于上下行跳转，当我迷糊时我总是很难反应过来当前mode是哪种按键映射；这让我很不开心，尝试几种方法无果后，我决定使用evil-collection
  
  目前的设想如下：

  使用~evil-collection~，但是并不去记忆其快捷键；它的主要作用是减少我误按jk按键时带来的损失，同时让我可以以近乎一致的方式操作buffer；在此基础上，主要提高自己输入命令的精确程度和速度，配合keyfreq进行迭代优化，以达到高效和舒适的目的
